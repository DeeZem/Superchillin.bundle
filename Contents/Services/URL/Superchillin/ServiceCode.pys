
DOMAIN = 'superchillin.com'
BASE_URL = 'http://'+DOMAIN+'/'
NORMAL = BASE_URL + 'fork.php?'
METADATA_URL = BASE_URL + '?%s&tv=%s'
THUMB = 'http://superchillin.com/2img/%s.jpg'

def MetadataObjectForURL(url):
	identifier = url.split('file=')[1].split('&')[0]
	tv = url.split('tv=')[1].split('&')[0]

	header = {
		"Host": DOMAIN,
		"User-Agent": "Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0",
		"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
		"Accept-Language": "en-US,en;q=0.5",
		"Accept-Encoding": "gzip, deflate",
		"Cookie": GetCookie(url),
		"Connection": "keep-alive",
		"If-Modified-Since": "*"
	}

	# Superchillin request
	page =          HTML.ElementFromURL(METADATA_URL % (identifier, tv), headers = header)
	imdb =          page.xpath("//a[@title='The Internet Movie Database']//@href")[0]

	# IMDb request
	page =           HTML.ElementFromURL(imdb)
	title =          page.xpath("//h1[@class='header']//span[@class='itemprop']//text()")
	title =            title[0] if title else ''
	description =    page.xpath("//meta[@property='og:description']//@content")
	description =      description[0] if description else ''
	rating =         page.xpath("//div[@class='titlePageSprite star-box-giga-star']//text()")
	rating =           float(rating[0]) if rating else float(0)
	content_rating = page.xpath("//meta[@itemprop='contentRating']//@content")
	content_rating =   content_rating[0] if content_rating else 'NR'
	
	writers =        page.xpath("//div[@itemprop='creator']//a//text()")
	directors =      page.xpath("//div[@itemprop='director']//a//text()")
	tags =           page.xpath("//div[@itemprop='keywords']//a//span//text()")
	genres =         page.xpath("//span[@itemprop='genre']//text()")
	thumb =          THUMB % (('ep'+identifier) if tv == '1' else identifier)

	return VideoClipObject(
		title = title,
		summary = description,
		genres = genres,
		rating = rating,
		content_rating = content_rating,
		writers = writers,
		directors = directors,
		tags = tags,
		thumb = thumb)

def MediaObjectsForURL(url):
	return [MediaObject(
		video_codec = VideoCodec.H264,
		audio_codec = AudioCodec.AAC,
		container = Container.MP4 if url.split('type=')[1].split('&')[0] == 'mp4' else '',
		video_resolution = '720' if url.split('hd=')[1].split('&')[0] == '0' else '1080',
		audio_channels = 2,
		optimized_for_streaming = True,
		parts = [PartObject(key=Callback(PlayVideo, url = url))]
	)]

def PlayVideo(url):
	cookie = GetCookie(url)
	header = {
		"Host": DOMAIN,
		"User-Agent": "Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0",
		"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
		"Accept-Language": "en-US,en;q=0.5",
		"Accept-Encoding": "gzip, deflate",
		"Cookie": cookie,
		"Connection": "keep-alive",
		"If-Modified-Since": "*"
	}
	url2 = "None"
	requrl = NORMAL
	requrl += 'file='     + url.split('file=')[1].split('&')[0]     + '&'
	requrl += 'loc='      + url.split('loc=')[1].split('&')[0]      + '&'
	requrl += 'hd='       + url.split('hd=')[1].split('&')[0]       + '&'
	requrl += 'tv='       + url.split('tv=')[1].split('&')[0]       + '&'
	requrl += 'type='     + url.split('type=')[1].split('&')[0]     + '&'
	requrl += 'auth='     + url.split('auth=')[1].split('&')[0]

	try:
		req = HTTP.Request(requrl, follow_redirects=False, headers=header)
		req.load()
	except Ex.RedirectError, e:
		url2 = e.location

	return Redirect(url2)

def NormalizeURL(url):
	return url

def GetCookie(url):
	noob = url.split("noob=")[1].split("&")[0]
	auth = url.split("authcook=")[1].split("&")[0]

	cookie = "noob=%s; auth=%s" % (noob, auth)
	return cookie

# to test use
# http://localhost:32400/system/services/url/lookup?url=
